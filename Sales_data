#include<iostream>
#include<vector>
#include<string>


struct Sales_data;
std::istream& read(std::istream&, Sales_data&);

struct Sales_data
{
	Sales_data() = default;
	Sales_data(const std::string& s):bookNo(s) {}
	Sales_data(const std::string& s,unsigned n,double p):bookNo(s),units_sold(n),revenue(n*p)  {}

	std::string isbn()  const { return bookNo; }
	Sales_data& combine(Sales_data&);
	Sales_data(std::istream& is) { read(is, *this); }


	std::string bookNo;
	unsigned units_sold = 0;
	double revenue = 0.0;
};



Sales_data& Sales_data::combine(Sales_data& item)
{
	units_sold += item.units_sold;
	revenue += item.revenue;
	return *this;
}


std::istream& read(std::istream& is, Sales_data& item)
{
	double price = 0.0;
	is >> item.bookNo >> item.units_sold >> price;
	item.revenue = item.units_sold*price;
	return is;
}


std::ostream& print(std::ostream& os, const Sales_data& item)
{
	os << item.isbn() << "   " << item.units_sold << "   " << item.revenue;
	return os;
}


Sales_data add(Sales_data& lhs,Sales_data& rhs)
{
	Sales_data sum = lhs;
	sum.combine(rhs);
	return sum;
}
